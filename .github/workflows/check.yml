name: Zig Test and Benchmark

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  ZIG_VERSION: 0.14.0-dev.2371+c013f45ad

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v3

      - name: Cache Zig
        uses: actions/cache@v3
        with:
          path: ~/zig
          key: ${{ runner.os }}-zig-${{ env.ZIG_VERSION }}

      - name: Install Zig
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          case "${{ runner.os }}" in
            Linux)
              wget https://ziglang.org/builds/zig-linux-x86_64-${{ env.ZIG_VERSION }}.tar.xz
              tar -xf zig-linux-x86_64-${{ env.ZIG_VERSION }}.tar.xz
              mv zig-linux-x86_64-${{ env.ZIG_VERSION }} ~/zig
              ;;
            macOS)
              wget https://ziglang.org/builds/zig-macos-x86_64-${{ env.ZIG_VERSION }}.tar.xz
              tar -xf zig-macos-x86_64-${{ env.ZIG_VERSION }}.tar.xz
              mv zig-macos-x86_64-${{ env.ZIG_VERSION }} ~/zig
              ;;
            Windows)
              curl -L https://ziglang.org/builds/zig-windows-x86_64-${{ env.ZIG_VERSION }}.zip -o zig.zip
              7z x zig.zip
              mv zig-windows-x86_64-${{ env.ZIG_VERSION }} ~/zig
              ;;
          esac
        shell: bash

      - name: Add Zig to PATH
        run: echo "${HOME}/zig" >> $GITHUB_PATH
        shell: bash

      - name: Cache Zig build artifacts
        uses: actions/cache@v3
        with:
          path: |
            zig-cache
            ~/.cache/zig
          key: ${{ runner.os }}-zig-build-${{ hashFiles('**/*.zig') }}
          restore-keys: ${{ runner.os }}-zig-build-

      - name: Formatting
        if: runner.os == 'Windows'
        shell: pwsh
        run: $env:HOME/zig/zig.exe fmt --check --color on .

      - name: Formatting
        if: runner.os != 'Windows'
        shell: bash
        run: ~/zig/zig fmt --check --color on .

      - name: Unit testing
        if: runner.os == 'Windows'
        shell: pwsh
        run: "$env:HOME\zig\zig.exe" build test --summary all

      - name: Unit testing
        if: runner.os != 'Windows'
        shell: bash
        run: ~/zig/zig build test --summary all

      - name: Building
        if: runner.os == 'Windows'
        shell: pwsh
        run: "$env:HOME\zig\zig.exe" build -Doptimize=ReleaseFast
      - name: Building
        if: runner.os != 'Windows'
        shell: bash
        run: ~/zig/zig build -Doptimize=ReleaseFast
